#pragma kernel ForwardPropagate
#include "MatLib.cginc"

StructuredBuffer<float> input;
RWStructuredBuffer<float> output;
StructuredBuffer<float> weights;
StructuredBuffer<float> bias;

const int inputSize;
const int outputSize;
const int activationFunction;

const int batchSize;

#define THREAD_COUNT 128

[numthreads(THREAD_COUNT, 1, 1)]
void ForwardPropagate(uint3 id : SV_DispatchThreadID)
{
    const int inOffset = id.x * inputSize;
    const int outOffset = id.x * outputSize;
    
    for (int x = 0; x < outputSize; x++)
    {
        float sum = 0;
        for (int i = 0; i < inputSize; i++)
            sum += weights[x * inputSize + i] * input[inOffset + i];

        output[outOffset + x] = ActivationFunction(sum + bias[x], activationFunction);
    }
}